
标准io
1. 文件流(FILE)
	已打开文件的标志
2. fopen(3)
	打开方式: r r+ w w+ a a+	
3. 读写文件
	fgetc(3); / fputc(3);
	getc(3); putc(3);
	getchar(3)

	fgets(3) / fputs(3);

	fread(3) / fwrite(3)
4. 定位流
	fseek(3);--->成功返回0
	SEEK_SET 开头
	SEEK_CUR 当前
	SEEK_END 末尾
	
	rewind(3); ===> fseek(stream, 0, SEEK_SET);
	ftell(stream);	
5. 关闭
	fclose(3);
6. 标准输入(stdin) / 标准输出(stdout) / 标准错误输出(stderr)
7. 缓冲
	标准io有缓存区
	作用:合并系统调用,提供程序的效率
	方式:
		行缓存: stdin stdout
		无缓存: stderr
		全缓存: 默认大小4k
	刷新缓存区:
		fflush(3);	
8. 临时文件
	tmpfile(3);
	文件关闭或者进程结束文件就自动删除了


文件io
1. 文件描述符
	非负整型(0~1023)
	已打开文件的标志

2. io函数
	open(2);
		必选三选一:O_RDONLY O_WRONLY O_RDWR
		可选:O_APPEND O_CREAT O_TRUNC
	read(2) / write(2);
	lseek(2); --->返回值是当前文件偏移量
		空洞文件
	close(2);

3. 文件共享
	dup(2);
	dup2(2);
	> 2> 2>&1	

4. 原子操作
	不可分割
		open(2); dup2(2);

文件和目录
1. stat(2)
	struct stat res
	<1>.st_mode & S_IFMT--->类型
		- regular
		d directory
		l link
		p pipe
		c charactor
		b block
		s socket
	<2>.st_mode & ~S_IFMT--->权限
		u g o
		rwx
		u+s
		g+s
		o+t
	<3>.st_nlink 硬链接个数
	<4>.st_uid .st_gid	
		getpwuid(3)--->struct passwd--->pw_name
		getgrgid(3)--->struct group--->gr_name
	<5>.st_size 文件字节个数
		!= 所占磁盘空间大小(st_blocks)
	<6>.st_mtim .st_atim .st_ctim
		localtime(3)
		strftime(3)
		time(2)

2. getopt(3)







